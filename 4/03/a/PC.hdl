// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16], load, inc, reset;
    OUT out[16];

    PARTS:
    //Decide whether to reset, load, or inc; note that at most one will be true
    Not(in=reset, out=notreset);
    And(a=notreset, b=load, out=doload); //if reseting, can't load
    Not(in=doload, out=notload);
    And(a=notreset, b=notload, out=caninc); //if reseting or loading, can't inc
    And(a=caninc, b=inc, out=doinc);

    //Get value to set
    Inc16(in=lastval, out=onemore);
    Duplicate16(in=doload, out=dupload);
    Duplicate16(in=doinc, out=dupinc);
    And16(a=in, b=dupload, out=loadval);
    And16(a=onemore, b=dupinc, out=incval);
    Or16(a=loadval, b=incval, out=newval); //if resetting, dupload == dupinc == 0, so newval will be 0

    //Set register value if necessary, connect it to the output
    Or(a=reset, b=load, out=resetload);
    Or(a=resetload, b=inc, out=change);
    Register(in=newval, load=change, out=lastval); //lastval == out, but needs to be used internally
    Duplicate16(in=true, out=allon);
    And16(a=lastval, b=allon, out=out); //echo lastval to out
}
